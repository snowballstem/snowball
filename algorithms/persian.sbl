/*
 * Persian Stemming Algorithm
 * Author: https://saeiddrv.com
*/

stringescapes { }

// Basic Persian Letters
stringdef aa      '{U+0622}'
stringdef alef    '{U+0627}'
stringdef be      '{U+0628}'
stringdef pe      '{U+067E}'
stringdef te      '{U+062A}'
stringdef se      '{U+062B}'
stringdef jim     '{U+062C}'
stringdef che     '{U+0686}'
stringdef he      '{U+062D}'
stringdef khe     '{U+062E}'
stringdef dal     '{U+062F}'
stringdef zal     '{U+0630}'
stringdef re      '{U+0631}'
stringdef ze      '{U+0632}'
stringdef zhe     '{U+0698}'
stringdef sin     '{U+0633}'
stringdef shin    '{U+0634}'
stringdef sad     '{U+0635}'
stringdef zad     '{U+0636}'
stringdef ta      '{U+0637}'
stringdef za      '{U+0638}'
stringdef ain     '{U+0639}'
stringdef ghain   '{U+063A}'
stringdef fe      '{U+0641}'
stringdef ghaf    '{U+0642}'
stringdef kaf     '{U+06A9}'
stringdef gaf     '{U+06AF}'
stringdef lam     '{U+0644}'
stringdef mim     '{U+0645}'
stringdef nun     '{U+0646}'
stringdef vav     '{U+0648}'
stringdef heh     '{U+0647}'
stringdef heh_du  '{U+06BE}'
stringdef ye      '{U+06CC}'

// Diacritics
stringdef farha    '{U+064E}'
stringdef damma    '{U+064F}'
stringdef kasra    '{U+0650}'
stringdef tashdid  '{U+0651}'
stringdef sukun    '{U+0652}'
stringdef hamza    '{U+0654}'

// Arabic variants
stringdef ar_heh                     '{U+06C1}'
stringdef ar_kaf                     '{U+0643}'
stringdef ar_ye                      '{U+064A}'
stringdef ar_ye_with_hamza_above     '{U+0626}'
stringdef ar_he_with_hamza_above     '{U+06C0}'
stringdef ar_he_marbuta              '{U+0629}'
stringdef ar_alef_with_hamza_below   '{U+0625}'
stringdef ar_alef_with_hamza_above   '{U+0623}'
stringdef ar_vav_with_hamza_above    '{U+0624}'

// Persian and Arabic numbers
stringdef num0 '{U+06F0}'
stringdef num1 '{U+06F1}'
stringdef num2 '{U+06F2}'
stringdef num3 '{U+06F3}'
stringdef num4 '{U+06F4}'
stringdef num5 '{U+06F5}'
stringdef num6 '{U+06F6}'
stringdef num7 '{U+06F7}'
stringdef num8 '{U+06F8}'
stringdef num9 '{U+06F9}'
stringdef ar_num0 '{U+0660}'
stringdef ar_num1 '{U+0661}'
stringdef ar_num2 '{U+0662}'
stringdef ar_num3 '{U+0663}'
stringdef ar_num4 '{U+0664}'
stringdef ar_num5 '{U+0665}'
stringdef ar_num6 '{U+0666}'
stringdef ar_num7 '{U+0667}'
stringdef ar_num8 '{U+0668}'
stringdef ar_num9 '{U+0669}'

// Other Characters
stringdef half_space  '{U+200C}'
stringdef zero_width  '{U+200B}'

routines (
    Exceptions

    Remove_Half_Spaces
    Remove_Diacritics

    Normalize_Arabic_Characters
    Normalize_Numbers
    Normalize_Nouns

    Remove_Prefix_Verbs
    Remove_Suffix_Verbs
    Remove_Prefix_Nouns
    Remove_Suffix_Nouns
    Remove_Suffix_Adjectives
)

externals ( stem )

define Remove_Half_Spaces as (
    repeat (
        (
            [substring] among (
                '{half_space}' '{zero_width}' (delete)
                '' (next)
            )
        )
    )
)

define Remove_Diacritics as (
    repeat (
        (
            [substring] among (
                '{farha}' '{damma}' '{kasra}' '{tashdid}' '{sukun}' '{hamza}' (delete)
                '' (next)
            )
        )
    )
)

define Normalize_Arabic_Characters as (
    repeat (
        (
            [substring] among (
                '{ar_kaf}' ( <- '{kaf}')
                '{ar_ye_with_hamza_above}' '{ar_ye}' ( <- '{ye}')
                '{ar_heh}' '{ar_he_marbuta}' '{ar_he_with_hamza_above}' ( <- '{heh}')
                '{ar_alef_with_hamza_above}' '{ar_alef_with_hamza_below}' ( <- '{alef}')
                '{ar_vav_with_hamza_above}' ( <- '{vav}')

                '{alef}{alef}' ( <- '{alef}')
                '{ye}{ye}' ( <- '{ye}')

                '' (next)
            )
        )
    )
)

define Normalize_Numbers as (
    repeat (
        (
            [substring] among (
                '{ar_num0}' ( <- '{num0}' )
                '{ar_num1}' ( <- '{num1}' )
                '{ar_num2}' ( <- '{num2}' )
                '{ar_num3}' ( <- '{num3}' )
                '{ar_num4}' ( <- '{num4}' )
                '{ar_num5}' ( <- '{num5}' )
                '{ar_num6}' ( <- '{num6}' )
                '{ar_num7}' ( <- '{num7}' )
                '{ar_num8}' ( <- '{num8}' )
                '{ar_num9}' ( <- '{num9}' )
                '' (next)
            )
        )
    )
)

define Normalize_Nouns as (
    backwards (
        [substring] among (
            '{alef}{sin}{te}' '{shin}{dal}{heh}' ( $(len > 4) <- '' )     // ast, shodeh -> ''
            '{heh}{alef}{nun}' ( $(len > 4) <- '{heh}' )                  // haan -> heh (giyahan -> giyah)
            '{gaf}{alef}{nun}' ( $(len > 4) <- '{heh}')                   // gaan -> heh (setaregan -> setareh)
            '' (next)
        )
    )
)

define Remove_Prefix_Verbs as (
    [substring] among (
        '{mim}{ye}' ($(len > 4) delete)          // mii (present continuous)
        '{nun}{mim}{ye}' ($(len > 5) delete)     // nemii (negative present continuous)
    )
)

define Remove_Prefix_Nouns as (
    [substring] among (
        // '{be}{ye}' ($(len > 3) delete)         // bii (Makes some conflicts with other names)
        '{be}{heh}' ($(len > 3) delete)        // beh
        '{pe}{ye}{shin}' ($(len > 4) delete)   // pish
        '{pe}{sin}' ($(len > 3) delete)        // pas
        '{ze}{ye}{re}' ($(len > 4) delete)     // ziir
        '{heh}{mim}' ($(len > 3) delete)       // ham
        '{nun}{alef}' ($(len > 3) delete)      // naa
    )
)

define Remove_Suffix_Nouns as (
    backwards (
        [substring] among (
            '{heh}{alef}' '{heh_du}{alef}' ($(len > 3) delete)             // haa (plural)
            '{heh}{alef}{ye}' '{heh_du}{alef}{ye}' ($(len > 4) delete)     // haaye (plural)

            '{alef}{te}' ($(len > 3) delete)              // aat (Arabic plural)
            '{ye}{te}' ($(len > 3) delete)                // yat

            // '{alef}{nun}'  ($(len > 3) delete)         // aan (plural) - Make some conflict with some nouns such as (Tehran)
        )
    )
)

define Remove_Suffix_Verbs as (
    backwards (
        [substring] among (
            '{ye}{mim}' ($(len > 3) delete)
            '{nun}{dal}' ($(len > 3) delete)
            '{mim}' ($(len > 3) delete)
            '{ye}{dal}' ($(len > 3) delete)
            '{alef}{ye}{dal}' ($(len > 3) delete)
            '{alef}{nun}{dal}' ($(len > 3) delete)
        )
    )
)

define Remove_Suffix_Adjectives as (
    backwards (
        [substring] among (
            '{te}{re}' (delete)           // tar (comparative)
            '{te}{re}{ye}{nun}' (delete)  // tarin (superlative)
            '{mim}{nun}{dal}' (delete)    // mand
            '{nun}{alef}{kaf}' (delete)   // naak
            '{gaf}{ye}' (delete)          // gii
            '{alef}{nun}{heh}' (delete)   // aaneh
        )
    )
)

define Exceptions as (
    [substring] among (
        '{sin}{ye}'
        '{dal}{re}'
        '{alef}{ye}{nun}'
        '{alef}{ye}'
        '{be}{re}'
        '{nun}{alef}{mim}'
        '{pe}{sin}'
        '{alef}{sin}{te}{alef}{nun}'
        '{be}{re}{alef}{ye}'
        '{pe}{ye}{vav}{nun}{dal}'
        '{mim}{ye}{lam}{alef}{dal}{ye}'
        '{mim}{lam}{ye}'
        '{che}{nun}{dal}'
        '{be}{re}{khe}{ye}'
        '{heh}{mim}{ye}{nun}'
        '{heh}{mim}{alef}{nun}'
        '{heh}{mim}{heh}'
        '{mim}{te}{re}'
        '{te}{ye}{mim}'
        '{sin}{lam}{alef}{mim}'
        '{alef}{sin}{lam}{alef}{mim}'
        '{ye}{ain}{nun}{ye}'
        '{aa}{lam}{be}{vav}{mim}'
        '{heh}{sin}{te}{mim}'
        '{nun}{ye}{sin}{te}{mim}'
        '{be}{vav}{dal}{mim}'
        '{be}{alef}{ye}{dal}'
        '{ain}{nun}{vav}{alef}{nun}'
        '{be}{ye}{re}{vav}{nun}'
    )
)

define stem as (
    do Remove_Half_Spaces             // Remove all half-space characters first
    do Remove_Diacritics              // Remove diacritics
    
    do Normalize_Arabic_Characters    // Normalize Arabic/Persian variants
    do Normalize_Numbers              // Convert Persian/Arabic numbers
    do Normalize_Nouns                // Normalize nouns

    ( Exceptions )                    // If word is in Exceptions, stop processing
    or (
        do Remove_Suffix_Nouns        // Remove noun suffixes
        do Remove_Prefix_Nouns        // Remove noun prefixes

        do Remove_Prefix_Verbs        // Remove verb prefixes
        do Remove_Suffix_Verbs        // Remove verb suffixes

        do Remove_Suffix_Adjectives   // Remove adjective suffixes
    )
)
