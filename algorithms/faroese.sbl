routines (
  mark_regions
  strip_suffix
  strip_t
)

externals ( stem )

integers ( p1 x )

booleans ( ccend )

groupings ( v )

stringescapes {}


/* Special characters. "'" indicates acute */

stringdef a'    '{U+00E1}'
stringdef ae    '{U+00E6}' // ash
stringdef i'    '{U+00ED}'
stringdef d/    '{U+00F0}' // eth
stringdef o'    '{U+00F3}'
stringdef o/    '{U+00F8}' // strikethrough "o"
stringdef u'    '{U+00FA}'
stringdef y'    '{U+00FD}'

/* Vowels */

define v 'a{a'}ei{i'}o{o'}u{u'}y{y'}{ae}{o/}'

define mark_regions as (
    $p1 = limit
    unset ccend
    test ( hop 3 setmark x )
    try ( goto v gopast non-v setmark p1 )
    try ( $p1 < x  $p1 = x )
    backwards substring among
      ('kt' 'gt' 'vt' 'mt' 'nt') (set ccend) ($p1 = x)
)

backwardmode (

    define strip_suffix as (
        setlimit tomark p1 for ([substring])
        among(
            'a' 'ana' 'ina' 'una' 'anna' 'a{d/}a' 'liga'
            'i' 'ini' 'uni' 'a{d/}ni' 'a{d/}i' 'ari' 'a{d/}ari' 'andi' 'asti'
            'a{d/}' 'i{d/}' 'ni{d/}'
            'um' 'anum' 'inum' 'unum' 'a{d/}um'
            'an' 'a{d/}an' 'in' 'urin' 'inn' 'arinn' 'urinn' 'irn'
            'ar' 'a{d/}ar' 'anar' 'arnar' 'irnar' 'unnar' 'urnar' 'arinnar' 'anarinnar'
            'ir' 'inir' 'arnir' 'irnir' 'urnir' 'ur' 'a{d/}ur'
            'u' 'a{d/}u'
            'is' 'ans' 'ins' 'isins' 'arins'
            'ast' 'a{d/}ust' 'a{d/}ist' ( delete )

            /* Conditionals based on characters preceding slice */
            'na' 'nu' 'nar' 'ni' 'nari' 'nan' 'nir' 'num' 'nis' 'nisins' ( ( not 'n' delete ) or ( <-'n' ) )
            'sins' ( ( not 's' delete ) or ( <-'s' ) )
            's' ( not 's' delete )
        )
    )


    define strip_t as (
      ccend [next] delete
    )

)

define stem as (
    do mark_regions
    backwards (
        do strip_suffix
        do strip_t
    )
)
